
Import('env', 'arch')

cpp_path = [
    "#phonelibs/acado/include",
    "#phonelibs/acado/include/acado",
    "#phonelibs/qpoases/INCLUDE",
    "#phonelibs/qpoases/INCLUDE/EXTRAS",
    "#phonelibs/qpoases/SRC/",
    "#phonelibs/qpoases",
    "lib_mpc_export"

]
if arch != "aarch64":
    acado_libs = [File("#phonelibs/acado/x64/lib/libacado_toolkit.a"),
                  File("#phonelibs/acado/x64/lib/libacado_casadi.a"),
                  File("#phonelibs/acado/x64/lib/libacado_csparse.a")]
    env.Program('generator', 'generator.cpp', LIBS=acado_libs, CPPPATH=cpp_path)
    acado_libs = [File("#phonelibs/acado/x64/lib/libacado_toolkit.a"),
                  File("#phonelibs/acado/x64/lib/libacado_casadi.a"),
                  File("#phonelibs/acado/x64/lib/libacado_csparse.a")]
    env.Program('generator', 'generator.cpp', LIBS=acado_libs, CPPPATH=cpp_path)
    
    targets = ['lib_mpc_export/acado_common.h',
               'lib_mpc_export/acado_auxiliary_functions.h',
               'lib_mpc_export/acado_auxiliary_functions.c',
               'lib_mpc_export/acado_qpoases_interface.hpp',
               'lib_mpc_export/acado_qpoases_interface.cpp',
               'lib_mpc_export/acado_integrator.c']
    command = 'generator'
       
    target_files = File(targets)
    command_file = File(command)

    env.Command(target_files,
                [command_file],
                command_file.get_abspath())

mpc_files = [
    "lateral_mpc.c",
    Glob("lib_mpc_export/*.c"),
    Glob("lib_mpc_export/*.cpp"),
]

interface_dir = Dir('lib_mpc_export')

SConscript(['#phonelibs/qpoases/SConscript'], variant_dir='lib_qp', exports=['interface_dir'])

env.SharedLibrary('mpc', mpc_files, LIBS=['m', 'qpoases'], LIBPATH=['lib_qp'], CPPPATH=cpp_path)
